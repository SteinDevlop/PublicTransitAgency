name: Escaneo Completo API OWASP ZAP

on:
  workflow_dispatch: 

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Crea red Docker
        run: docker network create zapnet

      - name: Levanta el contenedor FastAPI en red zapnet
        run: |
          docker pull gitzerohub/publictransitagency:latest
          docker run -d --name app --network zapnet -p 8000:8000 \
            -e HOST=${{ secrets.HOST }} \
            -e PORT=${{ secrets.PORT }} \
            -e DB=${{ secrets.DB }} \
            -e USER=${{ secrets.USER }} \
            -e PASSWORD=${{ secrets.PASSWORD }} \
            gitzerohub/publictransitagency:latest
          sleep 25

      - name: Espera que la API esté lista
        run: |
          for i in {1..20}; do
            docker run --rm --network zapnet curlimages/curl:8.8.0 \
              curl -f http://app:8000/openapi.json && break
            echo "Esperando..."
            sleep 5
          done

      - name: Da permisos de escritura al workspace
        run: sudo chmod -R 777 ${{ github.workspace }}

      - name: Descarga y muestra el esquema OpenAPI
        run: |
          docker run --rm --network zapnet -v ${{ github.workspace }}:/output curlimages/curl:8.8.0 \
            curl -o /output/openapi.json http://app:8000/openapi.json
          ls -lh openapi.json
          head -30 openapi.json
          jq . < openapi.json || echo "No es JSON válido"

      - name: Actualiza el OpenAPI spec para usar http://app:8000
        run: |
          jq --arg url "http://app:8000" \
            '.servers[0].url = $url' openapi.json > openapi.fixed.json
          mv openapi.fixed.json openapi.json
          echo "Modificado servers en el spec a app:8000"

      - name: Escanear toda la API con OWASP ZAP usando OpenAPI (red zapnet)
        run: |
          docker run --name zapscan --network zapnet \
            -v ${{ github.workspace }}:/zap/wrk \
            -w /zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable zap-api-scan.py \
              -d \
              -f openapi \
              -t /zap/wrk/openapi.json \
              -J report_json.json \
              -w report_md.md \
              -r report_html.html \
              -I
          docker logs zapscan || echo "No logs disponibles"
          docker rm -f zapscan || true
        continue-on-error: true

      - name: Sube los reportes como artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-reportes
          path: |
            report_html.html
            report_md.md
            report_json.json
